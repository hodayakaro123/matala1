const CommentModel = require("../models/comments_model");

const createComment = async (req, res) => {
  const commentData = req.body;
  try {
    const comment = await CommentModel.create(commentData);
    res.status(201).send(comment);
  } catch (error) {
    res.status(400).send(error.message);
  }
};

const getComments = async (req, res) => {
  try {
    const comments = await CommentModel.find();
    res.send(comments);
  } catch (error) {
    res.status(500).send(error.message);
  }
};

const getCommentsByPost = async (req, res) => {
  const postId = req.params.postId;
  try {
    const comments = await CommentModel.find({ postId });
    res.send(comments);
  } catch (error) {
    res.status(400).send(error.message);
  }
};

const updateComment = async (req, res) => {
  const id = req.params.id;
  const { sender, message } = req.body;

  try {
    const updatedComment = await CommentModel.findByIdAndUpdate(
      id,
      { sender, message },
      { new: true, runValidators: true }
    );
    if (updatedComment) {
      res.send(updatedComment);
    } else {
      res.status(404).send("Comment not found");
    }
  } catch (error) {
    res.status(400).send(error.message);
  }
};

const deleteComment = async (req, res) => {
  const id = req.params.id;

  try {
    const deletedComment = await CommentModel.findByIdAndDelete(id);
    if (deletedComment) {
      res.send("Comment deleted successfully");
    } else {
      res.status(404).send("Comment not found");
    }
  } catch (error) {
    res.status(400).send(error.message);
  }
};

module.exports = {
  createComment,
  getComments,
  getCommentsByPost,
  updateComment,
  deleteComment,
};
